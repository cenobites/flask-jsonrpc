events {
    worker_connections 1024;
}

http {
    resolver 1.1.1.2 1.0.0.2 127.0.0.11 10.89.0.1 ipv6=off valid=30s;
    resolver_timeout 1s;

    server {
        listen 80;
        listen [::]:80;

        server_name 127.0.0.1;

        root /opt/test-static/public;
        index index.html;

        location /health {
            default_type application/json;
            return 200 '{"status": "UP"}';
        }
    }

    server {
        listen 9503;
        listen [::]:9503;

        location / {
            return 503;
            add_header Content-Type text/plain;
        }

        error_page 503 @maintenance;
        location @maintenance {
            internal;
            rewrite ^(.*)$ /503.html break;
            root error_pages/;
        }
    }

    upstream flask_async_app {
        server async-app:5000;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        ssl_certificate /etc/nginx/ssl/flask-jsonrpc.cenobit.es.crt;
        ssl_certificate_key /etc/nginx/ssl/flask-jsonrpc.cenobit.es.key;

        include ssl/ssl-params.conf;

        server_name async-app.flask-jsonrpc.cenobit.es;

        location / {
            proxy_pass http://flask_async_app/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Prefix /;
        }
    }

    server {
        listen 80;
        listen [::]:80;

        server_name async-app.flask-jsonrpc.cenobit.es;

        return 302 https://$server_name$request_uri;
    }
}
