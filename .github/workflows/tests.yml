name: Tests [Docker]

concurrency:
  group: testing
  cancel-in-progress: true

on:
  push:
    branches:
      - release/**
    tags-ignore:
      - v**
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  issue_comment:
    types: [created]

permissions:
  contents: read
  actions: write
  issues: write
  pull-requests: write

jobs:
  does-it-run:
    name: Does it run?
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
    steps:
      - name: Check comment review
        if: >-
          github.event_name == 'issue_comment' &&
          github.event.issue.pull_request &&
          contains(github.event.comment.body, 'github-actions-workflow-tests') == false
        uses: action-pack/cancel@v1
      - name: Comment about start of workflow
        if: >-
          github.event_name == 'issue_comment' &&
          github.event.issue.pull_request &&
          contains(github.event.comment.body, 'github-actions-workflow-tests')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ github.event.issue.pull_request.html_url }}
        run: |
          gh pr comment $PR --body 'Running "Tests [Docker]" workflow.'

  unit-tests:
    name: Unit tests
    needs: does-it-run
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
    steps:
    - name: Checkout source at ${{ matrix.platform }}
      uses: actions/checkout@v4
    - name: Run tests
      run: |
        bash ./bin/docker-compose-test.sh

  integration-tests:
    name: Integration tests
    needs: does-it-run
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
    steps:
    - name: Checkout source at ${{ matrix.platform }}
      uses: actions/checkout@v4
    - name: Run tests
      run: |
        bash ./bin/docker-compose-it.sh

  example-tests:
    name: Examples | Unit tests
    needs: does-it-run
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - name: Checkout source at ${{ matrix.platform }}
      uses: actions/checkout@v4
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install tox
    - name: Run tests | ${{ matrix.python-version }}
      run: |
        find examples/ -name "tox.ini" -print0 | xargs -0 -t -I % -P 1 tox -e py,py-async -p all -c %
