name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff
        run: ruff check .

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12, 3.13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run unit tests
        run: pytest tests/unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run integration tests
        run: pytest tests/integration

  example-tests:
    name: Run Example Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run example tests
        run: pytest examples

  run-tox:
    name: Run Tox Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9 3.10, 3.11, 3.12, 3.13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Tox
        run: pip install tox

      - name: Run Tox
        run: tox

  coverage:
    name: Collect Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies for coverage
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run coverage
        run: pytest --cov=src tests/

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install build tools
        run: |
          pip install build

      - name: Build package
        run: python -m build

  build-mypyc:
    name: Build with mypyc
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install mypyc
        run: |
          pip install mypy mypyc

      - name: Compile with mypyc
        run: mypyc --config-file mypy.ini src/

  build-wheels:
    name: Build Wheels for Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install wheel build tools
        run: |
          pip install build

      - name: Build wheels
        run: python -m build --wheel
