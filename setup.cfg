[metadata]
name = Flask-JSONRPC
version = attr: flask_jsonrpc.__version__
description = Adds JSONRPC support to Flask.
long_description = file: README
long_description_content_type = text/plain
url = https://github.com/cenobites/flask-jsonrpc
author = Nycholas de Oliveira e Oliveira
author_email = nycholas@gmail.com
maintainer = Cenobit Technologies Inc.
maintainer_email = hi@cenobit.es
license = BSD-3-Clause
license_files =
    LICENSE
classifiers =
    Environment :: Web Environment
    Intended Audience :: Developers
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Software Development :: Libraries :: Application Frameworks
project_urls =
    Documentation = https://flask-jsonrpc.readthedocs.io/
    Source Code = https://github.com/cenobites/flask-jsonrpc
    Issue Tracker = https://github.com/cenobites/flask-jsonrpc/issues/

[options]
packages = find:
python_requires = >=3.7
include_package_data = True
package_dir =
    =src
zip_safe = False

[options.packages.find]
where = src

[aliases]
test = pytest

[tool:pytest]
addopts = --pyargs --doctest-modules --junitxml=junit/test-results.xml --cov-report=html --cov-report=term --cov=flask_jsonrpc --cov-fail-under=100
junit_family = xunit2
python_files = tests.py test_*.py *_tests.py
pythonpath = src/
norecursedirs = tests/test_apps
testpaths =
    tests
    flask_jsonrpc
required_plugins =
    pytest-cov
    pytest-xdist
    pytest-sugar
    pytest-env

[coverage:run]
branch = True
source =
    flask_jsonrpc
    tests
omit =
    */settings.py
    */fixtures.py
    */tests.py
    */test_*.py
    */*_tests.py

[coverage:paths]
source =
    src
    */site-packages

[coverage:report]
fail_under = 100
ignore_errors = True
skip_covered = True
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    if app.config['DEBUG']
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    if t.TYPE_CHECKING:

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
length_sort = True
line_length = 120
known_flask = flask
sections = FUTURE,STDLIB,FLASK,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[flake8]
select = B,E,F,W,B9,Y0,ISC,I0
ignore = D203,E302,F401,F403,F405,W503
exclude = .git,.tox,.docker,.github,.venv,__pycache__,docs,old,build,dist,htmlcov,junit,.pytest_cache,htmldoc
max-complexity = 10
max-line-length = 120

[pycodestyle]
max-line-length = 120
exclude = .git,.tox,.docker,.github,.venv,__pycache__,docs,old,build,dist,htmlcov,junit,.pytest_cache,htmldoc

[mypy]
files = src/flask_jsonrpc
python_version = 3.11
check_untyped_defs = True
ignore_errors = False
ignore_missing_imports = False
strict = True

[pytype]
inputs = src/flask_jsonrpc
python_version = 3.10
